import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import "../styles/Paypage.css";

const locations = {
    "H√† N·ªôi": [
      "Ba ƒê√¨nh", "Ho√†n Ki·∫øm", "T√¢y H·ªì", "Long Bi√™n", "C·∫ßu Gi·∫•y", "ƒê·ªëng ƒêa", "Hai B√† Tr∆∞ng", "Ho√†ng Mai", "Thanh Xu√¢n",
      "S√≥c S∆°n", "ƒê√¥ng Anh", "Gia L√¢m", "Nam T·ª´ Li√™m", "Thanh Tr√¨", "B·∫Øc T·ª´ Li√™m", "M√™ Linh", "H√† ƒê√¥ng"
    ],
    "TP H·ªì Ch√≠ Minh": [
      "Qu·∫≠n 1", "Qu·∫≠n 2", "Qu·∫≠n 3", "Qu·∫≠n 4", "Qu·∫≠n 5", "Qu·∫≠n 6", "Qu·∫≠n 7", "Qu·∫≠n 8", "Qu·∫≠n 9", "Qu·∫≠n 10",
      "Qu·∫≠n 11", "Qu·∫≠n 12", "B√¨nh T√¢n", "B√¨nh Th·∫°nh", "G√≤ V·∫•p", "Ph√∫ Nhu·∫≠n", "T√¢n B√¨nh", "T√¢n Ph√∫", "Th·ªß ƒê·ª©c"
    ],
    "ƒê√† N·∫µng": ["H·∫£i Ch√¢u", "Thanh Kh√™", "S∆°n Tr√†", "Ng≈© H√†nh S∆°n", "Li√™n Chi·ªÉu", "H√≤a Vang"],
  "H·∫£i Ph√≤ng": ["H·ªìng B√†ng", "L√™ Ch√¢n", "Ng√¥ Quy·ªÅn", "H·∫£i An", "D∆∞∆°ng Kinh"],
  "C·∫ßn Th∆°": ["Ninh Ki·ªÅu", "B√¨nh Th·ªßy", "C√°i RƒÉng", "√î M√¥n", "Th·ªët N·ªët"],
  "An Giang": ["Long Xuy√™n", "Ch√¢u ƒê·ªëc", "T√¢n Ch√¢u", "Ch√¢u Th√†nh"],
  "B√† R·ªãa - V≈©ng T√†u": ["B√† R·ªãa", "V≈©ng T√†u", "Xuy√™n M·ªôc", "Ch√¢u ƒê·ª©c"],
  "B·∫Øc Giang": ["B·∫Øc Giang", "Y√™n Th·∫ø", "L·ª•c Nam", "Hi·ªáp H√≤a"],
  "B·∫Øc K·∫°n": ["B·∫Øc K·∫°n", "Na R√¨", "Ba B·ªÉ", "Ch·ª£ ƒê·ªìn"],
  "B·∫°c Li√™u": ["B·∫°c Li√™u", "H·ªìng D√¢n", "Gi√° Rai", "Ph∆∞·ªõc Long"],
  "B·∫Øc Ninh": ["B·∫Øc Ninh", "Qu·∫ø V√µ", "Gia B√¨nh", "Thu·∫≠n Th√†nh"],
  "B·∫øn Tre": ["B·∫øn Tre", "Ch√¢u Th√†nh", "M·ªè C√†y", "Ba Tri"],
  "B√¨nh ƒê·ªãnh": ["Quy Nh∆°n", "An Nh∆°n", "Ho√†i Nh∆°n", "Ph√π C√°t"],
  "B√¨nh D∆∞∆°ng": ["Th·ªß D·∫ßu M·ªôt", "Thu·∫≠n An", "Dƒ© An", "T√¢n Uy√™n"],
  "B√¨nh Ph∆∞·ªõc": ["ƒê·ªìng Xo√†i", "B√¨nh Long", "Ph∆∞·ªõc Long", "L·ªôc Ninh"],
  "B√¨nh Thu·∫≠n": ["Phan Thi·∫øt", "La Gi", "Tuy Phong", "B·∫Øc B√¨nh"],
  "C√† Mau": ["C√† Mau", "NƒÉm CƒÉn", "Ng·ªçc Hi·ªÉn", "C√°i N∆∞·ªõc"],
  "Cao B·∫±ng": ["Cao B·∫±ng", "B·∫£o L·∫°c", "Tr√πng Kh√°nh", "Nguy√™n B√¨nh"],
  "ƒê·∫Øk L·∫Øk": ["Bu√¥n Ma Thu·ªôt", "Bu√¥n H·ªì", "Ea Kar", "Kr√¥ng P·∫Øc"],
  "ƒê·∫Øk N√¥ng": ["Gia Nghƒ©a", "ƒê·∫Øk Mil", "C∆∞ J√∫t", "ƒê·∫Øk Glong"],
  "ƒêi·ªán Bi√™n": ["ƒêi·ªán Bi√™n Ph·ªß", "M∆∞·ªùng Lay", "M∆∞·ªùng Ch√†", "Tu·∫ßn Gi√°o"],
  "ƒê·ªìng Nai": ["Bi√™n H√≤a", "Long Kh√°nh", "Nh∆°n Tr·∫°ch", "Tr·∫£ng Bom"],
  "ƒê·ªìng Th√°p": ["Cao L√£nh", "Sa ƒê√©c", "H·ªìng Ng·ª±", "Tam N√¥ng"],
  "Gia Lai": ["Pleiku", "An Kh√™", "Ayun Pa", "Kbang"],
  "H√† Giang": ["H√† Giang", "ƒê·ªìng VƒÉn", "Y√™n Minh", "M√®o V·∫°c"],
  "H√† Nam": ["Ph·ªß L√Ω", "Duy Ti√™n", "Kim B·∫£ng", "Thanh Li√™m"],
  "H√† Tƒ©nh": ["H√† Tƒ©nh", "H·ªìng Lƒ©nh", "K·ª≥ Anh", "L·ªôc H√†"],
  "H·∫£i D∆∞∆°ng": ["H·∫£i D∆∞∆°ng", "Ch√≠ Linh", "Nam S√°ch", "Kinh M√¥n"],
  "H·∫≠u Giang": ["V·ªã Thanh", "Ng√£ B·∫£y", "Ch√¢u Th√†nh A", "Ph·ª•ng Hi·ªáp"],
  "H√≤a B√¨nh": ["H√≤a B√¨nh", "L∆∞∆°ng S∆°n", "Mai Ch√¢u", "T√¢n L·∫°c"],
  "H∆∞ng Y√™n": ["H∆∞ng Y√™n", "M·ªπ H√†o", "Kho√°i Ch√¢u", "Y√™n M·ªπ"],
  "Kh√°nh H√≤a": ["Nha Trang", "Cam Ranh", "Ninh H√≤a", "V·∫°n Ninh"],
  "Ki√™n Giang": ["R·∫°ch Gi√°", "H√† Ti√™n", "Ph√∫ Qu·ªëc", "Gi·ªìng Ri·ªÅng"],
  "Kon Tum": ["Kon Tum", "ƒê·∫Øk H√†", "ƒê·∫Øk T√¥", "Ng·ªçc H·ªìi"],
  "Lai Ch√¢u": ["Lai Ch√¢u", "M∆∞·ªùng T√®", "Phong Th·ªï", "S√¨n H·ªì"],
  "L√¢m ƒê·ªìng": ["ƒê√† L·∫°t", "B·∫£o L·ªôc", "Di Linh", "L·∫°c D∆∞∆°ng"],
  "L·∫°ng S∆°n": ["L·∫°ng S∆°n", "Cao L·ªôc", "VƒÉn L√£ng", "H·ªØu L≈©ng"],
  "L√†o Cai": ["L√†o Cai", "Sa Pa", "B√°t X√°t", "B·∫£o Th·∫Øng"],
  "Long An": ["T√¢n An", "B·∫øn L·ª©c", "C·∫ßn Giu·ªôc", "ƒê·ª©c H√≤a"],
  "Nam ƒê·ªãnh": ["Nam ƒê·ªãnh", "M·ªπ L·ªôc", "Giao Th·ªßy", "Tr·ª±c Ninh"],
  "Ngh·ªá An": ["Vinh", "C·ª≠a L√≤", "Th√°i H√≤a", "Nghi L·ªôc"],
  "Ninh B√¨nh": ["Ninh B√¨nh", "Tam ƒêi·ªáp", "Gia Vi·ªÖn", "Hoa L∆∞"],
  "Ninh Thu·∫≠n": ["Phan Rang-Th√°p Ch√†m", "Ninh H·∫£i", "Thu·∫≠n B·∫Øc", "Thu·∫≠n Nam"],
  "Ph√∫ Th·ªç": ["Vi·ªát Tr√¨", "Ph√∫ Th·ªç", "L√¢m Thao", "Thanh S∆°n"],
  "Ph√∫ Y√™n": ["Tuy H√≤a", "S√¥ng C·∫ßu", "ƒê·ªìng Xu√¢n", "S∆°n H√≤a"],
  "Qu·∫£ng B√¨nh": ["ƒê·ªìng H·ªõi", "Ba ƒê·ªìn", "Qu·∫£ng Tr·∫°ch", "Tuy√™n H√≥a"],
  "Qu·∫£ng Nam": ["Tam K·ª≥", "H·ªôi An", "ƒêi·ªán B√†n", "Duy Xuy√™n"],
  "Qu·∫£ng Ng√£i": ["Qu·∫£ng Ng√£i", "ƒê·ª©c Ph·ªï", "Ba T∆°", "B√¨nh S∆°n"],
  "Qu·∫£ng Ninh": ["H·∫° Long", "C·∫©m Ph·∫£", "M√≥ng C√°i", "U√¥ng B√≠"],
  "Qu·∫£ng Tr·ªã": ["ƒê√¥ng H√†", "Qu·∫£ng Tr·ªã", "H·∫£i LƒÉng", "Tri·ªáu Phong"],
  "S√≥c TrƒÉng": ["S√≥c TrƒÉng", "Vƒ©nh Ch√¢u", "Tr·∫ßn ƒê·ªÅ", "Ng√£ NƒÉm"],
  "S∆°n La": ["S∆°n La", "M·ªôc Ch√¢u", "Mai S∆°n", "Thu·∫≠n Ch√¢u"],
  "T√¢y Ninh": ["T√¢y Ninh", "H√≤a Th√†nh", "Tr·∫£ng B√†ng", "T√¢n Ch√¢u"],
  "Th√°i B√¨nh": ["Th√°i B√¨nh", "Ki·∫øn X∆∞∆°ng", "Ti·ªÅn H·∫£i", "V≈© Th∆∞"],
  "Th√°i Nguy√™n": ["Th√°i Nguy√™n", "S√¥ng C√¥ng", "Ph·ªï Y√™n", "ƒê·ªãnh H√≥a"],
  "Thanh H√≥a": ["Thanh H√≥a", "B·ªâm S∆°n", "S·∫ßm S∆°n", "Tƒ©nh Gia"],
  "Th·ª´a Thi√™n Hu·∫ø": ["Hu·∫ø", "H∆∞∆°ng Tr√†", "Ph√∫ L·ªôc", "Phong ƒêi·ªÅn"],
  "Ti·ªÅn Giang": ["M·ªπ Tho", "G√≤ C√¥ng", "Cai L·∫≠y", "C√°i B√®"],
  "Tr√† Vinh": ["Tr√† Vinh", "Duy√™n H·∫£i", "Ti·ªÉu C·∫ßn", "C·∫ßu Ngang"],
  "Tuy√™n Quang": ["Tuy√™n Quang", "Chi√™m H√≥a", "L√¢m B√¨nh", "H√†m Y√™n"],
  "Vƒ©nh Long": ["Vƒ©nh Long", "B√¨nh Minh", "Tr√† √în", "Long H·ªì"],
  "Vƒ©nh Ph√∫c": ["Vƒ©nh Y√™n", "Ph√∫c Y√™n", "Tam ƒê·∫£o", "Y√™n L·∫°c"],
  "Y√™n B√°i": ["Y√™n B√°i", "Nghƒ©a L·ªô", "L·ª•c Y√™n", "VƒÉn Ch·∫•n"],
};
  

const Paypage = () => {
  const [orderItems, setOrderItems] = useState([]);
  const navigate = useNavigate();

  // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ localStorage
  const storedUser = JSON.parse(localStorage.getItem("user"));

  const [customerInfo, setCustomerInfo] = useState({
    name: storedUser ? storedUser.name : "",
    email: storedUser ? storedUser.email : "",
    phone: "",
    address: "",
    city: "",
    district: "",
    ward: "",
    shippingMethod: "standard",
    paymentMethod: "cod",
  });

  useEffect(() => {
    const storedOrder = JSON.parse(localStorage.getItem("cart")) || [];
  
    // Ki·ªÉm tra n·∫øu gi·ªè h√†ng c√≥ d·ªØ li·ªáu, gi·ªØ nguy√™n totalPrice n·∫øu ƒë√£ c√≥, n·∫øu kh√¥ng th√¨ t√≠nh l·∫°i
    const updatedOrder = storedOrder.map((item) => ({
      ...item,
      totalPrice: item.totalPrice || (parseInt(item.price.replace(/[‚Ç´,.]/g, ""), 10) * item.quantity),
    }));
  
    setOrderItems(updatedOrder);
  }, []);

  const totalAmount = orderItems.reduce((total, item) => total + item.totalPrice, 0);

  // C·∫≠p nh·∫≠t th√¥ng tin kh√°ch h√†ng
  const handleInputChange = (e) => {
    setCustomerInfo({ ...customerInfo, [e.target.name]: e.target.value });
  };

  // C·∫≠p nh·∫≠t danh s√°ch qu·∫≠n/huy·ªán khi ch·ªçn th√†nh ph·ªë
  const handleCityChange = (e) => {
    const selectedCity = e.target.value;
    setCustomerInfo({ ...customerInfo, city: selectedCity, district: "" });
  };

  // X·ª≠ l√Ω thanh to√°n
  const handleConfirmPayment = () => {
    if (!customerInfo.phone || !customerInfo.address || !customerInfo.city || !customerInfo.district) {
      alert("Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin giao h√†ng!");
      return;
    }
  
    alert(`Thanh to√°n th√†nh c√¥ng! C·∫£m ∆°n b·∫°n ƒë√£ mua h√†ng.`);
  
    // üõ† X√≥a d·ªØ li·ªáu gi·ªè h√†ng sau khi thanh to√°n
    localStorage.removeItem("cart");
    setOrderItems([]); // C·∫≠p nh·∫≠t UI ƒë·ªÉ kh√¥ng c√≤n s·∫£n ph·∫©m n√†o
  
    // üõ† ƒêi·ªÅu h∆∞·ªõng v·ªÅ trang ch·ªß
    navigate("/");
  };
  

  return (
    <div className="paypage-container">
      <div className="paypage">
        {/* TH√îNG TIN GIAO H√ÄNG */}
        <div className="customer-info">
          <h2>Th√¥ng tin giao h√†ng</h2>
          <input type="text" name="name" value={customerInfo.name} readOnly />
          <input type="email" name="email" value={customerInfo.email} readOnly />
          <input type="text" name="phone" placeholder="S·ªë ƒëi·ªán tho·∫°i" value={customerInfo.phone} onChange={handleInputChange} required />

          {/* Ch·ªçn th√†nh ph·ªë */}
          <select name="city" value={customerInfo.city} onChange={handleCityChange} required>
            <option value="">Ch·ªçn th√†nh ph·ªë</option>
            {Object.keys(locations).map((city) => (
              <option key={city} value={city}>{city}</option>
            ))}
          </select>

          {/* Ch·ªçn qu·∫≠n/huy·ªán */}
          <select name="district" value={customerInfo.district} onChange={handleInputChange} required>
            <option value="">Ch·ªçn qu·∫≠n/huy·ªán</option>
            {customerInfo.city && locations[customerInfo.city]?.map((district) => (
              <option key={district} value={district}>{district}</option>
            ))}
          </select>

          {/* Nh·∫≠p ph∆∞·ªùng/x√£ */}
          <input type="text" name="ward" placeholder="Nh·∫≠p ph∆∞·ªùng/x√£" value={customerInfo.ward} onChange={handleInputChange} required />
        {/* Nh·∫≠p ƒê·ªãa ch·ªâ c·ª• th·ªÉ  */}
          <input type="text" name="address" placeholder="ƒê·ªãa ch·ªâ c·ª• th·ªÉ" value={customerInfo.address} onChange={handleInputChange} required />

          {/* PH∆Ø∆†NG TH·ª®C V·∫¨N CHUY·ªÇN */}
          <h3>Ph∆∞∆°ng th·ª©c v·∫≠n chuy·ªÉn</h3>
          <select name="shippingMethod" value={customerInfo.shippingMethod} onChange={handleInputChange}>
            <option value="standard">Giao h√†ng ti√™u chu·∫©n (3-5 ng√†y)</option>
            <option value="express">Giao h√†ng nhanh (1-2 ng√†y)</option>
          </select>
        </div>

        {/* GI·ªé H√ÄNG */}
        <div className="order-summary">
        <h2>ƒê∆°n h√†ng c·ªßa b·∫°n</h2>
        <ul className="order-list">
         {orderItems.map((item, index) => (
            <li key={index} className="order-item">
             <img src={item.img} alt={item.name} className="order-image" />
              <div className="order-info">
                <p className="order-name">{item.name}</p>
                <p className="order-price">Gi√°: {item.price}</p>
                <p className="order-quantity">S·ªë l∆∞·ª£ng: {item.quantity}</p>
                <p className="order-total">T·ªïng: ‚Ç´{item.totalPrice.toLocaleString()}</p>
                </div>
            </li>
            ))}
        </ul>

          {/* CH·ªåN PH∆Ø∆†NG TH·ª®C THANH TO√ÅN */}
          <h3>Ph∆∞∆°ng th·ª©c thanh to√°n</h3>
          <div className="payment-method">
            <label>
              <input type="radio" name="paymentMethod" value="cod" checked={customerInfo.paymentMethod === "cod"} onChange={handleInputChange} />
              Thanh to√°n khi nh·∫≠n h√†ng (COD)
            </label>
            <label>
              <input type="radio" name="paymentMethod" value="qr" checked={customerInfo.paymentMethod === "qr"} onChange={handleInputChange} />
              Thanh to√°n qua m√£ QR ng√¢n h√†ng
            </label>
          </div>

          {/* N·∫æU CH·ªåN THANH TO√ÅN QR HI·ªÇN TH·ªä ·∫¢NH */}
          {customerInfo.paymentMethod === "qr" && (
            <div className="qr-payment">
              <p>Qu√©t m√£ QR ƒë·ªÉ thanh to√°n:</p>
              <img src="/qr-code.png" alt="QR Code Thanh To√°n" />
            </div>
          )}

          {/* HI·ªÇN TH·ªä T·ªîNG TI·ªÄN V√Ä THANH TO√ÅN */}
          <div className="payment-summary">
            <h3>T·ªïng thanh to√°n: <span className="total-amount">‚Ç´{totalAmount.toLocaleString()}</span></h3>
            <button className="confirm-payment-btn" onClick={handleConfirmPayment}>X√°c nh·∫≠n thanh to√°n</button>
          </div>
        </div>
      </div>

      {/* N√öT QUAY L·∫†I TRANG CH·ª¶ */}
      <button className="back-btn" onClick={() => navigate("/")}>Quay l·∫°i trang ch·ªß</button>
    </div>
  );
};

export default Paypage;
